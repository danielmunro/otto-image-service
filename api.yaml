openapi: "3.0.0"
info:
  title: Otto image service
  version: 1.0
paths:
  /album:
    post:
      operationId: createNewAlbumV1
      summary: create a new album
      requestBody:
        description: album to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewAlbum"
      responses:
        '201':
          description: get an album
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
  /album/{link}:
    get:
      operationId: getAlbumV1
      summary: get an album
      parameters:
        - in: path
          name: link
          schema:
            type: string
      responses:
        '200':
          description: get an album
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '404':
          description: |-
            404 response
  /album/{link}/image:
    post:
      operationId: createNewImageV1
      summary: create a new image
      parameters:
        - in: path
          name: link
          schema:
            type: string
      requestBody:
        description: image to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewImage"
      responses:
        '201':
          description: |-
            201 response
  /image/{link}:
    get:
      operationId: getImageV1
      summary: get an image
      parameters:
        - in: path
          name: link
          schema:
            type: string
      responses:
        '200':
          description: get an image
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Image'
        '404':
          description: |-
            404 response
  /user/{uuid}/image:
    post:
      operationId: uploadNewProfilePicV1
      summary: upload a new profile pic
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
            format: uuid
      responses:
        '201':
          description: created image
          content:
            application/json:
              schema:
                type: object
                $ref: "#/components/schemas/NewImage"
components:
  schemas:
    User:
      type: object
      required:
        - uuid
        - username
      properties:
        uuid:
          type: string
          format: uuid
        username:
          type: string
        albums:
          type: array
          items:
            $ref: "#/components/schemas/Album"
    NewAlbum:
      type: object
      required:
        - name
        - visibility
      properties:
        visibility:
          type: object
          $ref: "#/components/schemas/Visibility"
        name:
          type: string
        description:
          type: string
        link:
          type: string
        user:
          type: object
          $ref: "#/components/schemas/User"
    Album:
      type: object
      required:
        - uuid
        - created_at
        - visibility
        - name
        - link
        - album_type
        - user
      properties:
        uuid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        link:
          type: string
        album_type:
          type: object
          $ref: "#/components/schemas/AlbumType"
        visibility:
          type: object
          $ref: "#/components/schemas/Visibility"
        name:
          type: string
        description:
          type: string
        user:
          type: object
          $ref: "#/components/schemas/User"
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
    NewImage:
      type: object
      required:
        - filename
      properties:
        filename:
          type: string
        link:
          type: string
        image:
          type: string
    Image:
      type: object
      required:
        - uuid
        - filename
        - s3_key
        - created_at
        - link
        - album
        - user
      properties:
        uuid:
          type: string
          format: uuid
        filename:
          type: string
        s3_key:
          type: string
        created_at:
          type: string
          format: date-time
        link:
          type: string
        album:
          type: object
          $ref: "#/components/schemas/Album"
        user:
          type: object
          $ref: "#/components/schemas/User"
    AlbumType:
      type: string
      enum:
        - profile_pics
        - user_created
    Visibility:
      type: string
      enum:
        - private
        - friends
        - public
